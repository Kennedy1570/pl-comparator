// app/compare/page.js
"use client";

import React, { useState, useEffect } from 'react';
import { Form, Button, Container, Row, Col, Card } from 'react-bootstrap';

export default function ComparePage() {
  const [teams, setTeams] = useState([]);
  const [loading, setLoading] = useState(false);
  const [teamId1, setTeamId1] = useState('');
  const [teamId2, setTeamId2] = useState('');
  const [players1, setPlayers1] = useState([]);
  const [players2, setPlayers2] = useState([]);
  const [selectedPlayer1, setSelectedPlayer1] = useState(null);
  const [selectedPlayer2, setSelectedPlayer2] = useState(null);

  // This would fetch teams from our API
  useEffect(() => {
    // We'll implement this when we set up the API
    // For now, let's use mock data
    setTeams([
      { id: 1, name: 'Arsenal' },
      { id: 2, name: 'Aston Villa' },
      { id: 3, name: 'Manchester City' },
      // Add more teams
    ]);
  }, []);

  const handleTeam1Change = (e) => {
    setTeamId1(e.target.value);
    // In a real app, this would fetch players for the selected team
    // We'll implement this when we set up the API
  };

  const handleTeam2Change = (e) => {
    setTeamId2(e.target.value);
    // Same as above
  };

  return (
    <Container className="mt-4">
      <h1 className="text-primary mb-4">Compare Players</h1>
      
      <Row>
        <Col md={6} className="mb-4">
          <Card className="fpl-bg p-3">
            <h2>Player 1</h2>
            <Form.Group className="mb-3">
              <Form.Label>Select Team</Form.Label>
              <Form.Select 
                value={teamId1}
                onChange={handleTeam1Change}
              >
                <option value="">Select a team</option>
                {teams.map(team => (
                  <option key={team.id} value={team.id}>{team.name}</option>
                ))}
              </Form.Select>
            </Form.Group>
            
            <Form.Group>
              <Form.Label>Select Player</Form.Label>
              <Form.Select disabled={!teamId1}>
                <option value="">Select a player</option>
                {/* We'll populate this when we have the API */}
              </Form.Select>
            </Form.Group>
          </Card>
        </Col>
        
        <Col md={6} className="mb-4">
          <Card className="fpl-bg p-3">
            <h2>Player 2</h2>
            <Form.Group className="mb-3">
              <Form.Label>Select Team</Form.Label>
              <Form.Select 
                value={teamId2}
                onChange={handleTeam2Change}
              >
                <option value="">Select a team</option>
                {teams.map(team => (
                  <option key={team.id} value={team.id}>{team.name}</option>
                ))}
              </Form.Select>
            </Form.Group>
            
            <Form.Group>
              <Form.Label>Select Player</Form.Label>
              <Form.Select disabled={!teamId2}>
                <option value="">Select a player</option>
                {/* We'll populate this when we have the API */}
              </Form.Select>
            </Form.Group>
          </Card>
        </Col>
      </Row>
      
      <div className="d-flex justify-content-center mt-4">
        <Button className="btn-success px-4 py-2">Compare Players</Button>
      </div>
    </Container>
  );
}

<Container className="mt-4">
      <h1 className="text-primary mb-4">Compare Players</h1>
      
      {loadingTeams ? (
        <div className="text-center my-5">
          <Spinner animation="border" variant="primary" />
          <p className="mt-2">Loading teams...</p>
        </div>
      ) : (
        <Row>
          <Col md={6} className="mb-4">
            <Card className="fpl-bg p-3">
              <h2>Player 1</h2>
              <Form.Group className="mb-3">
                <Form.Label>Select Team</Form.Label>
                <Form.Select 
                  value={teamId1}
                  onChange={handleTeamChange1}
                >
                  <option value="">Select a team</option>
                  {teams.map(team => (
                    <option key={team.id} value={team.id}>{team.name}</option>
                  ))}
                </Form.Select>
              </Form.Group>
              
              {loadingPlayers1 ? (
                <div className="text-center py-4">
                  <Spinner animation="border" size="sm" />
                </div>
              ) : (
                teamId1 && (
                  <>
                    <Form.Group className="mb-3">
                      <Form.Label>Select Player</Form.Label>
                      <Form.Select
                        value={selectedPlayer1}
                        onChange={handlePlayerChange1}
                        disabled={players1.length === 0}
                      >
                        <option value="">Select a player</option>
                        {players1.map(player => (
                          <option key={player.id} value={player.id}>
                            {player.name} ({player.position})
                          </option>
                        ))}
                      </Form.Select>
                    </Form.Group>
                    
                    {selectedPlayer1 && (
                      <div className="text-center mt-3">
                        <img 
                          src={players1.find(p => p.id.toString() === selectedPlayer1)?.photo}
                          alt="Player" 
                          className="rounded-circle"
                          style={{ maxWidth: '100px', maxHeight: '100px' }}
                        />
                      </div>
                    )}
                  </>
                )
              )}
            </Card>
          </Col>
          
          <Col md={6} className="mb-4">
            <Card className="fpl-bg p-3">
              <h2>Player 2</h2>
              <Form.Group className="mb-3">
                <Form.Label>Select Team</Form.Label>
                <Form.Select 
                  value={teamId2}
                  onChange={handleTeamChange2}
                >
                  <option value="">Select a team</option>
                  {teams.map(team => (
                    <option key={team.id} value={team.id}>{team.name}</option>
                  ))}
                </Form.Select>
              </Form.Group>
              
              {loadingPlayers2 ? (
                <div className="text-center py-4">
                  <Spinner animation="border" size="sm" />
                </div>
              ) : (
                teamId2 && (
                  <>
                    <Form.Group className="mb-3">
                      <Form.Label>Select Player</Form.Label>
                      <Form.Select
                        value={selectedPlayer2}
                        onChange={handlePlayerChange2}
                        disabled={players2.length === 0}
                      >
                        <option value="">Select a player</option>
                        {players2.map(player => (
                          <option key={player.id} value={player.id}>
                            {player.name} ({player.position})
                          </option>
                        ))}
                      </Form.Select>
                    </Form.Group>
                    
                    {selectedPlayer2 && (
                      <div className="text-center mt-3">
                        <img 
                          src={players2.find(p => p.id.toString() === selectedPlayer2)?.photo}
                          alt="Player" 
                          className="rounded-circle"
                          style={{ maxWidth: '100px', maxHeight: '100px' }}
                        />
                      </div>
                    )}
                  </>
                )
              )}
            </Card>
          </Col>
        </Row>
      )}
      
      <div className="d-flex justify-content-center mt-4">
        <Button className="btn-success px-4 py-2" onClick={handleCompare} disabled={!selectedPlayer1 || !selectedPlayer2}>
          Compare Players
        </Button>
      </div>
    </Container>